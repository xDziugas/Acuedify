@model IndexModel
@{
}

<div>
    <h4 class="mb-4 mt-3">Favorite quizzes:</h4>
    <table class="table quizzes-table mt-2">
        <thead>
            <tr>
                <th width="20%" class="text">Title</th>
                <th width="60%" class="text">Description</th>
                <th width="20%" class="text">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var quiz in Model.Favourites)
            {
                <tr class="quiz-item">
                    <td>
                        <div class="custom-div">
                            <a href="#" class="custom-link toggle-favorite" data-id="@quiz.Id" data-isfavorite="@quiz.isFavorite ? 'True' : 'False'">
                                <svg width="16" height="16" viewBox="0 0 16 16" class="bi bi-emoji-heart-eyes custom-icon @(quiz.isFavorite ? "favorite-heart" : "not-favorite-heart")">
                                    <use xlink:href="Icons/Icons.svg#icon-heart" />
                                </svg>
                            </a>

                            <span class="text">@quiz.Title</span>
                        </div>
                    </td>
                    <td class="text">@quiz.Description</td>
                    <td>
                        <a asp-page="/Playing/Index" asp-route-quizId="@quiz.Id" class="btn btn-outline-success btn-sm">
                            <svg width="16" height="16" viewBox="0 0 16 16">
                                <use xlink:href="Icons/Icons.svg#icon-play"></use>
                            </svg>
                        </a>
                        <a aasp-page="/Quizzes/Edit" asp-route-id=@quiz.Id class="btn btn-outline-primary btn-sm">
                            <svg width="16" height="16" viewBox="0 0 16 16">
                                <use xlink:href="Icons/Icons.svg#icon-edit"></use>
                            </svg>
                        </a>
                        <a asp-page="DeleteQuiz" asp-route-id=@quiz.Id class="btn btn-outline-danger btn-sm">
                            <svg width="16" height="16" viewBox="0 0 16 16">
                                <use xlink:href="Icons/Icons.svg#icon-delete"></use>
                            </svg>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        addFavoriteToggleListeners();
    });

    function addFavoriteToggleListeners() {
        document.querySelectorAll('.toggle-favorite').forEach(item => {
            item.addEventListener('click', function (e) {
                e.preventDefault();
                var quizId = parseInt(this.getAttribute('data-id'));
                var isFavorite = this.getAttribute('data-isfavorite') === 'True';

                // Toggle favorite status
                isFavorite = !isFavorite;
                this.setAttribute('data-isfavorite', isFavorite ? 'True' : 'False');

                // Update icon class
                updateHeartIcon(this, isFavorite);

                // Refresh content
                refreshTabContent(quizId);
            });
        });
    }

    function updateHeartIcon(element, isFavorite) {
        const icon = element.querySelector('svg');
        if (icon) {
            if (isFavorite) {
                icon.classList.add('favorite-heart');
                icon.classList.remove('not-favorite-heart');
            } else {
                icon.classList.remove('favorite-heart');
                icon.classList.add('not-favorite-heart');
            }
        }
    }

    function refreshTabContent(quizId) {
        ['tests', 'favs'].forEach(tabId => {
            fetch(`/Library?handler=ReloadTabContent&tab=${tabId}&id=${quizId}`)
                .then(response => response.text())
                .then(html => {
                    document.getElementById(tabId).innerHTML = html;
                    addFavoriteToggleListeners(); // Rebind event listeners
                })
                .catch(error => console.error('Error reloading tab content:', error));
        });
    }

</script>



